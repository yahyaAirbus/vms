{
  "type": "module",
  "dependencies": {
    "@aws-sdk/client-dynamodb": "^3.576.0",
    "@aws-sdk/credential-provider-ini": "^3.576.0",
    "@aws-sdk/lib-dynamodb": "^3.576.0",
    "@aws-sdk/util-dynamodb": "^3.576.0",
    "@ffmpeg-installer/ffmpeg": "^1.1.0",
    "aws-sdk": "^2.1619.0",
    "axios": "^1.6.8",
    "cors": "^2.8.5",
    "dotenv": "^16.4.5",
    "ejs": "^3.1.10",
    "express": "^4.19.2",
    "ffmpeg": "^0.0.4",
    "fluent-ffmpeg": "^2.1.2",
    "fs": "^0.0.1-security",
    "http": "^0.0.1-security",
    "jsonwebtoken": "^9.0.2",
    "node-media-server": "^2.6.6",
    "node-rtsp-stream": "^0.0.9",
    "node-rtsp-stream-jsmpeg": "^0.0.2",
    "nodemon": "^3.1.0",
    "react-router-dom": "^6.23.0",
    "websocket.io": "^0.2.1",
    "youtube-dl-exec": "^3.0.2",
    "ytdl-core": "^4.11.5"
  },
  "scripts": {
    "dev": "concurrently \"npm run start-server\" \"npm run start-go\" \"npm run start-docker\"",
    "start-server": "nodemon server.cjs",
    "start-go": "sh -c 'if ! command -v go &> /dev/null; then wget https://dl.google.com/go/go1.16.5.linux-amd64.tar.gz && sudo tar -xvf go1.16.5.linux-amd64.tar.gz && sudo mv go /usr/local && echo \"export GOROOT=/usr/local/go\" >> ~/.profile && echo \"export GOPATH=$HOME/go\" >> ~/.profile && echo \"export PATH=$GOPATH/bin:$GOROOT/bin:$PATH\" >> ~/.profile && source ~/.profile && rm go1.16.5.linux-amd64.tar.gz; fi && cd RTSPtoWeb && GO111MODULE=on go run *.go'",
    "start-docker": "sh -c 'if ! command -v docker &> /dev/null; then sudo apt-get update && sudo apt-get install -y ca-certificates curl gnupg lsb-release && curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg && echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null && sudo apt-get update && sudo apt-get install -y docker-ce docker-ce-cli containerd.io; fi && cd rtsp_server && docker run --rm -it -e RTSP_PROTOCOLS=tcp -p 8554:8554 rtsp-simple-server'",
    "build": "npm install"
  },
  "devDependencies": {
    "concurrently": "^8.2.2"
  }
}